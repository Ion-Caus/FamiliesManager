@page "/edit/{Id:int}"

@using FamiliesManager.Data
@using FamiliesManager.Models
@using FamiliesManager.Componets

@inject IAdultService AdultService
@inject NavigationManager NavigationManager

@if (_adultToEdit == null)
{
    <em>Adult not found!</em>
}
else
{
    <h3>Editing infomration about @_adultToEdit.FirstName @_adultToEdit.LastName</h3>
    <hr/>

    <AdultForm Adult="@_adultToEdit" 
               SubmitHandler="@SaveChanges"/>
    
    @if (_errorMessage != "")
    {
        <div class="alert alert-primary" role="alert">
            @_errorMessage
        </div>
    }
}

@code {

    [Parameter]
    public int Id { get; set; }

    private Adult _adultToEdit;
    private string _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _adultToEdit = await AdultService.ReadAsync(Id);
            _errorMessage = "";
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
        }
    }

    private async Task SaveChanges()
    {
        try
        {
            await AdultService.UpdateAsync(_adultToEdit);
            NavigationManager.NavigateTo("/adults");
            _errorMessage = "";
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
        }
    }

}