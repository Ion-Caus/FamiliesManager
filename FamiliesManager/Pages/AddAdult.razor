@page "/addAdult"
@attribute [Authorize(Policy = "MustBeLoggedIn")]

@using FamiliesManager.Data
@using FamiliesManager.Models
@using FamiliesManager.Componets

@inject IAdultService AdultService
@inject NavigationManager NavigationManager

<h3>Add new adult</h3>
<hr/>

<AdultForm Adult="@_newAdult" SubmitHandler="AddNewAdult"/>

@if (_errorMessage != "")
{
    <div class="alert alert-primary" role="alert">
        @_errorMessage
    </div>
}

@code {
    private string _errorMessage;

    private readonly Adult _newAdult = new()
    {
        Sex = "M",
        EyeColor = "Brown",
        HairColor = "Brown"
    };

    protected override void OnInitialized()
    {
        _newAdult.JobTitle = new Job();
        _errorMessage = "";
    }

    private async Task AddNewAdult()
    {
        try
        {
            await AdultService.CreateAsync(_newAdult);
            NavigationManager.NavigateTo("/adults");
            _errorMessage = "";
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
        }
    }

}